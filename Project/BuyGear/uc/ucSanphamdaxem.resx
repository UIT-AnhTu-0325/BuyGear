<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnThemVaoGio.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAHwAAAAkCAYAAABLw14kAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAMhSURBVHhe7ZxdSFNhGMfPZZdddtlll93UlpDvcm3HObcp
        U+nrwiuJkC6KICIwckOnZ1+uNDMJo4EkFIFgBEUaMryQEV1EGqIXpZSyLTFbuzjtn0/EdNkiS8/b84P3
        YpyzMzi/87wfz/OeKQyzKeKgzyxM/iseNZxwq6Gko6Ljg8Xs17n9/YZ7jXuOBgfC3FpJWrYWIVp2u9TQ
        TdXSkWk83pu63TemTyTe6MnJWX3+XVpn/g2417jnaHDQ3HQnZS1ry7nswSFhattLuv4Mp1Vrr7ZpqcF4
        Ire0uEw/zewUstmcPjL8Qvc6oykEZT44d5G63wNRXeuITPT1PFtdXl6lyzM7FYhHUNY4wlPiQMse0lga
        6B7q3bFXifHpLF2PMQjTUwu61xWdF2W+/aRzcxDZkI0vMsYEQ2+DJ/a+pHEd3ThHtvGZm13UvdXRGQQw
        qd2IWw13Ddwa4wFbEh6PvPxSWxV5RHoLwUDvtgczGPwZeTjhvZ4uOp5jSo9ZHp3HSMLz0de6pzL0lDSv
        gbVb5ZHOj7z8kpMqq7ZSsFRDig5ZGzrOSEbAN7wizL7TpFtRHBWd3UODE3SYkY0N3ToKIciNM3KCJZrT
        qr0l3YpSbQ/OcKJFXjA3s5W3fyLdioIPPGGTG5RXSbei4AMjNyz8P6NAOIronGGTmwLhmMFhJsfICYIZ
        QU26UTQJJbFthpETbI3CfjjSnV+WHdUGHt6fpMOMbCDHglwL6cYOF1/j1csPeMOapPT3juZshwM+0r22
        y8UuAp/pOCMZRUukyLUi58rIBTKoyKSS5h/gCcCTQOcxknD+bDwtDvlrSHMhHOVy8dPo/g6K5A2e2By/
        TWJ8UBs5Wde9kI/ufaS3OOjaTzX0LHLmzdica7675LQF60nr5rhVzQ3p/GqR8UBkQ3ZtVeQM6SwNRDre
        YOAMnHHAmI1uvOTIXs+3rctqKNnU2J/iDRI7F8y5Ll24l8EE7ZdjdikIU6sFF6tzdWVuXHuSQ9TzGL+9
        wEF8YFzH69vIkwuT/xjp2jrw9OTlX0TUo/qCkhu37WlwYCsPdOIPGkgPw6xHUb4CD1dDZqnUyS0AAAAA
        SUVORK5CYII=
</value>
  </data>
  <data name="lblGia.BaseStylesheet" xml:space="preserve">
    <value>#bunifu-label { padding: 1.2px; font-family: 'Segoe UI'; font-size: 14.25pt; width: 100%; height: 100%; font-style: normal; font-weight: bold; text-decoration: none; color: #403885; text-align: left; }</value>
  </data>
  <data name="lblNhaCungCap.BaseStylesheet" xml:space="preserve">
    <value>#bunifu-label { padding: 1.2px; font-family: 'Segoe UI Semibold'; font-size: 9.75pt; width: 100%; height: 100%; font-style: normal; font-weight: bold; text-decoration: none; color: #00C0C0; text-align: left; }</value>
  </data>
  <data name="bunifuLabel1.BaseStylesheet" xml:space="preserve">
    <value>#bunifu-label { padding: 1.2px; font-family: 'Segoe UI Semibold'; font-size: 9.75pt; width: 100%; height: 100%; font-style: normal; font-weight: bold; text-decoration: none; color: #403885; text-align: left; }</value>
  </data>
</root>